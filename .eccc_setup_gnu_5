#!/bin/bash

# Load compiler and libraries
# add a symbolic link for gem_dbase 
# create build directory according to the compiler called
# modify goas-devel.code-workspace file for Code

[[ $0 != $BASH_SOURCE ]] || (echo "This file must be sourced!" && exit 1)

# Load compiler and libraries
# /usr/bin/gfortran sur gaia
# . r.load.dot /ssm/net/hpcs/compilers/gcc-5.1.0/gcc_5.1.0_ubuntu-14.04-amd64-64
# où se trouve openmpi à utiliser?
. r.load.dot /ssm/net/hpcs/compilers/gcc-5.1.0/gcc_5.1.0_ubuntu-14.04-amd64-64
. ssmuse-sh -p /ssm/net/hpcs/201402/master/openmpi_1.6.5_ubuntu-12.04-amd64-64

# Add a symbolic link for gem_dbase
HOSTNAME=`hostname -d`

case "${HOSTNAME}" in
    "cmc.ec.gc.ca")
        GEM_DBASE=/home/ordenv/ssm-domains9/release/gem-data_4.2.0/gem-data_4.2.0_all/share/data/dfiles;
        [ -e ${GEM_DBASE} ] && [ ! -e gem_dbase ] && ln -sf ${GEM_DBASE} gem_dbase;
        ;;
    "science.gc.ca")
        GEM_DBASE=/fs/ssm/eccc/mrd/rpn/MIG/GEM/d/gem-data/gem-data_4.2.0/gem-data_4.2.0_all/share/data/dfiles;
        [ -e ${GEM_DBASE} ] && [ ! -e gem_dbase ] && ln -sf ${GEM_DBASE} gem_dbase;
        ;;
    *)
        echo "hostname not found";
        ;;
esac

rootPath="$(dirname $BASH_SOURCE)"

# Create build directory according to the compiler called
compVersion=$("${rootPath}/project/compiler.sh" gnu)
sed -i 's/COMPILER intel/COMPILER gnu/g' "${rootPath}/project/CMakeLists.txt"

buildDir="${rootPath}/build/gnu-${compVersion}"
echo mkdir -p "${buildDir}"
mkdir -p "${buildDir}"

sed -i s"/.*cmake.buildDirectory.*/           \"cmake.buildDirectory\": \"\${workspaceRoot}\/build\/gnu-$compVersion\",/" "${rootPath}/goas-devel.code-workspace"

unset buildDir compVersion rootPath
