/* #define PY_SSIZE_T_CLEAN */
#include <stdio.h>
/* #include <n/text/StringUtils.h> */
/* #include <locale.h> */
#include <Python.h>

void cpython_interp(int argc, char* argv[]) {

   /* SetupDoce args char 2 wchar */
   wchar_t** _argv = PyMem_Malloc(sizeof(wchar_t*)*argc);
   for (int i=0; i<argc; i++) {
      wchar_t* arg = Py_DecodeLocale(argv[i], NULL);
      _argv[i] = arg;
   }
   if (_argv[0] == NULL) {
      fprintf(stderr, "Fatal error: cannot decode argv[0]\n");
      exit(1);
   }
   
   /* Setup */
   Py_SetProgramName(_argv[0]);  /* optional but recommended */
   Py_Initialize();
   PySys_SetArgv(argc, _argv);

   /* Add local path */
   PyObject *sys = PyImport_ImportModule("sys");
   PyObject *path = PyObject_GetAttrString(sys, "path");

   /* Custom path */
   /* char *cwd = nrealpath(argv[0]); */
   /* char *libdir = nstrpath(cwd, "python_lib", NULL); */
   /* PyList_Append(path, PyString_FromString(libdir)); */
   /* free(cwd); */
   /* free(libdir); */

   /* Run the 'main' module */
   int rtn = Py_Main(argc, _argv);
   if (Py_FinalizeEx() < 0 || rtn != 0) {
      exit(120);
   }
   PyMem_RawFree(_argv[0]);
   /* return 0; */
}


/* wchar_t** _argv = PyMem_Malloc(sizeof(wchar_t*)*argc); */
/* for (int i=0; i<argc; i++) { */
/*   wchar_t* arg = Py_DecodeLocale(argv[i], NULL); */
/*   _argv[i] = arg; */
/* } */
/* Py_Initialize(); */
/* PySys_SetArgv(argc, _argv); */

/*    wchar_t *program = Py_DecodeLocale(argv[0], NULL); */
/*    if (program == NULL) { */
/*       fprintf(stderr, "Fatal error: cannot decode argv[0]\n"); */
/*       exit(1); */
/*    } */
/*    Py_SetProgramName(program);  /\* optional but recommended *\/ */
